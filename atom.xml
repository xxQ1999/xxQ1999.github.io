<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>まだまだだね</title>
  
  <subtitle>飞光飞光，劝你一杯酒</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://github.com/xxq1999/"/>
  <updated>2018-08-13T17:12:09.388Z</updated>
  <id>http://github.com/xxq1999/</id>
  
  <author>
    <name>XXQ</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>错排（公式+三种生成）</title>
    <link href="http://github.com/xxq1999/2018/08/14/%E9%94%99%E6%8E%92%EF%BC%88%E5%85%AC%E5%BC%8F+%E4%B8%89%E7%A7%8D%E7%94%9F%E6%88%90%EF%BC%89/"/>
    <id>http://github.com/xxq1999/2018/08/14/错排（公式+三种生成）/</id>
    <published>2018-08-13T17:11:41.968Z</published>
    <updated>2018-08-13T17:12:09.388Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><ol><li>普通阶乘</li></ol><p>$$<br>D_n=|I|-\sum_{i=1}^n|S_i|+\sum_{i=1}^n\sum_{j&gt;i}|S_i∩S_j|-\sum_{i=1}^n\sum_{j&gt;i}\sum_{k&gt;i}|S_i∩S_j∩S_k|+…+(-1)^{n-1}|S_1∩S_2∩…∩S_n|<br>$$</p><p>$$<br>=n!(1-\frac{1}{1!}+\frac{1}{2!}-\frac{1}{3!}+…+(-1)^{n}\frac{1}{n!})<br>$$</p><ol><li>递推关系</li></ol><p>$$<br>D_n=(n-1)(D_{n-1}+D_{n-2}),D_1=0,D_2=1<br>$$</p><p>$$<br>D_n=nD_{n-1}+(-1)^n<br>$$</p><h2 id="三种生成方式"><a href="#三种生成方式" class="headerlink" title="三种生成方式"></a>三种生成方式</h2><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><p>时间复杂度为$O(D_n)$，但是由于递归函数的调用开销是很大的，系统要为每次函数调用分配存储空间，并将调用点压栈予以记录。而在函数调用结束后，还要释放空间，弹栈恢复断点。所以，考虑函数处理过程，整体看来，递归法的效率并不高。 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Digui</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> cur,<span class="keyword">int</span> vis[])</span> <span class="comment">//递归</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cur&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        copy(a+<span class="number">1</span>,a+n,ostream_iterator&lt;<span class="keyword">int</span>&gt;(<span class="built_in">cout</span>,<span class="string">" "</span>));</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;a[n]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        num1++;<span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i]&amp;&amp;cur!=i)</span><br><span class="line">        &#123;</span><br><span class="line">            vis[i]=<span class="number">1</span>;a[cur]=i;</span><br><span class="line">            Digui(n,cur+<span class="number">1</span>,vis);</span><br><span class="line">            vis[i]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字典序生成法"><a href="#字典序生成法" class="headerlink" title="字典序生成法"></a>字典序生成法</h3><p>用全排列的字典序生成法，同时对每次生成的全排列检验是否合法。</p><p>时间复杂度$O(2n*n!)$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dictionary</span><span class="params">(<span class="keyword">int</span> n)</span> <span class="comment">//字典生成</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        b[i]=i;</span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">if</span>(b[i]==i)</span><br><span class="line">            &#123;</span><br><span class="line">                flag=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag) <span class="keyword">continue</span>;</span><br><span class="line">        num2++;</span><br><span class="line">        copy(b+<span class="number">1</span>,b+n,ostream_iterator&lt;<span class="keyword">int</span>&gt;(<span class="built_in">cout</span>,<span class="string">" "</span>));</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;b[n]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(next_permutation(b+<span class="number">1</span>,b+<span class="number">1</span>+n));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="改进的字典序生成法"><a href="#改进的字典序生成法" class="headerlink" title="改进的字典序生成法"></a>改进的字典序生成法</h3><p>在对于某一个生成的全排列时判断，同时对接下来不正确的全排列都跳过。由于这种额外的判断方式，我们不能再使用next_permutation函数。</p><p>时间复杂度$O(D_n)$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">AdLxOrder</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num_a = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> *dearr = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">int</span> *occup = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">int</span> Flag = n + <span class="number">1</span>; <span class="comment">//记录不满足错排的元素位置，均满足则为n+1</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++)&#123; dearr[i] = <span class="number">0</span>;occup[i] = <span class="number">0</span>;&#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, len = <span class="number">0</span>; i &lt;= n + <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; n)                            <span class="comment">//安排第i个位置</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)    <span class="comment">//安排第i个位置</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (occup[j] == <span class="number">0</span> &amp;&amp; j != i)</span><br><span class="line">                &#123;</span><br><span class="line">                    occup[j] = <span class="number">1</span>;            <span class="comment">//occup[j]记录j是否已经被安排</span></span><br><span class="line">                    dearr[i] = j;            <span class="comment">//安排dearr[i]</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (i == n)                    <span class="comment">//安排最后一位</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)    <span class="comment">//安排第i个位置，无论是否满足</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (occup[j] == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    occup[j] = <span class="number">1</span>;            <span class="comment">//occup[j]记录j是否已经被安排</span></span><br><span class="line">                    dearr[i] = j;</span><br><span class="line">                    <span class="keyword">if</span> (j == i)</span><br><span class="line">                        Flag = n;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>                                <span class="comment">//i == n+1</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Flag == n + <span class="number">1</span>)                <span class="comment">//满足，输出，并找字典序下一个</span></span><br><span class="line">            &#123;</span><br><span class="line">                num_a++;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>;k &lt;= n; k++)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%d  "</span>,dearr[k]);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">                <span class="keyword">int</span> pos = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = n; k &gt; <span class="number">1</span>; k--)    <span class="comment">//从右往左找下降</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (dearr[k - <span class="number">1</span>] &lt; dearr[k])</span><br><span class="line">                    &#123;</span><br><span class="line">                        pos = k - <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> m = n; m &gt; pos; m--)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span> (dearr[m] &gt; dearr[pos])    <span class="comment">//找到后缀中较大的最小元素</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">if</span> (dearr[m] == pos)</span><br><span class="line">                                    Flag = pos;     <span class="comment">//记录不满足的位置</span></span><br><span class="line">                                <span class="keyword">int</span> tmp = dearr[m];   <span class="comment">//交换</span></span><br><span class="line">                                dearr[m] = dearr[pos];</span><br><span class="line">                                dearr[pos] = tmp;</span><br><span class="line">                                <span class="comment">//记录不满足的位置（只记录最左侧）</span></span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">int</span> k1 = pos+<span class="number">1</span>, k2 = n; k1 &lt; k2; k1++, k2--)</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (dearr[k1] == k2 &amp;&amp; Flag &gt; k2)</span><br><span class="line">                                        Flag = k2;  <span class="comment">//记录不满足的位置</span></span><br><span class="line">                                    <span class="keyword">if</span> (dearr[k2] == k1 &amp;&amp; Flag &gt; k1)</span><br><span class="line">                                        Flag = k1;  <span class="comment">//记录不满足的位置</span></span><br><span class="line"></span><br><span class="line">                                    <span class="keyword">int</span> tmp = dearr[k2]; <span class="comment">//陆续交换</span></span><br><span class="line">                                    dearr[k2] = dearr[k1];</span><br><span class="line">                                    dearr[k1] = tmp;</span><br><span class="line">                                &#125;</span><br><span class="line">                                i = n; <span class="comment">//循环末尾有i++，此处特取n</span></span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>                            <span class="comment">//找关键位置的下一个值</span></span><br><span class="line">            &#123;                                <span class="comment">//关键位置：下降位置和不满足位置的最左者</span></span><br><span class="line">                <span class="keyword">int</span> pos = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = n; k &gt; <span class="number">1</span>; k--)    <span class="comment">//从右往左找下降</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (dearr[k - <span class="number">1</span>] &lt; dearr[k])</span><br><span class="line">                    &#123;</span><br><span class="line">                        pos = k - <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">if</span> (pos &gt; Flag)        <span class="comment">//pos取下降位置和不满足位置的最左者</span></span><br><span class="line">                            pos = Flag;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> m = pos; m &lt;= n; m++) occup[dearr[m]] = <span class="number">0</span>; <span class="comment">//全部重置</span></span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> m = dearr[pos] + <span class="number">1</span>; m &lt;= n; m++) <span class="comment">//从dearr[pos]+1开始找</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span> (occup[m] == <span class="number">0</span> &amp;&amp; m != pos) <span class="comment">//给pos找到下一个值</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                dearr[pos] = m;</span><br><span class="line">                                occup[m] = <span class="number">1</span>;</span><br><span class="line">                                i = pos;</span><br><span class="line">                                Flag = n + <span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span> (Flag == n + <span class="number">1</span>)</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                            k = pos + <span class="number">1</span>;    <span class="comment">//重新向前找下降，循环末尾有k--，此处特+1</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">delete</span> []dearr;</span><br><span class="line">    <span class="keyword">delete</span> []occup;</span><br><span class="line">    <span class="keyword">return</span> num_a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;公式&quot;&gt;&lt;a href=&quot;#公式&quot; class=&quot;headerlink&quot; title=&quot;公式&quot;&gt;&lt;/a&gt;公式&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;普通阶乘&lt;/li&gt;
&lt;/ol
      
    
    </summary>
    
      <category term="算法" scheme="http://github.com/xxq1999/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="排列组合" scheme="http://github.com/xxq1999/tags/%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>GuGuFishtion(欧拉函数公式+莫比乌斯)</title>
    <link href="http://github.com/xxq1999/2018/08/14/GuGuFishtion(%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0%E5%85%AC%E5%BC%8F+%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF)/"/>
    <id>http://github.com/xxq1999/2018/08/14/GuGuFishtion(欧拉函数公式+莫比乌斯)/</id>
    <published>2018-08-13T17:04:22.643Z</published>
    <updated>2018-08-13T17:04:22.652Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="GuGuFishtion"><a href="#GuGuFishtion" class="headerlink" title="GuGuFishtion"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6390" target="_blank" rel="noopener">GuGuFishtion</a></h2><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>求：<br>$$<br>Ans=\sum_{i=1}^{n}\sum_{j=1}^m\frac{φ(ij)}{φ(i)φ(j)}\%p<br>$$<br>其中，n,m&lt;=1e6, max(n,m)&lt;=p&lt;=1e9，且p为素数。</p><p>##思路</p><p>由欧拉函数公式：<br>$$<br>φ(x)=x(1-\frac{1}{p_1})(1-\frac{1}{p_2})(1-\frac{1}{p_3})…(1-\frac{1}{p_n})，其中p_i为x的质因子<br>$$<br>将公式带入$\frac{φ(ij)}{φ(i)φ(j)}$中：<br>$$<br>原式=\frac{ij(1-\frac{1}{c_1})…(1-\frac{1}{c_t})}{i(1-\frac{1}{a_1})…(1-\frac{1}{a_n})j(1-\frac{1}{b_1})…(1-\frac{1}{b_m})}<br>$$</p><p>$$<br>=\frac{1}{(1-\frac{1}{a_1})(1-\frac{1}{a_2})…(1-\frac{1}{b_1})(1-\frac{1}{b_2})…}<br>$$</p><p>上下同乘以gcd(i,j)，则可以得到：</p><p>(这里虽然讲不清楚但是大致是一个容斥)<br>$$<br>原式=\frac{gcd(i,j)}{gcd(i,j)-gcd(i,j)/质因数的任意组合+gcd(i,j)/所有质因子的组合}<br>$$</p><p>$$<br>=\frac{gcd(i,j)}{φ(gcd(i,j))}<br>$$</p><p>因此<br>$$<br>Ans=\sum_{i=1}^{n}\sum_{j=1}^m\frac{gcd(i,j)}{φ(gcd(i,j))}\%p<br>$$<br>令k=gcd(i,j)，并枚举k，有：<br>$$<br>Ans=\sum_{i=1}^{n}\sum_{j=1}^m\sum_{k=1}^{min(n,m)}\frac{k}{φ(k)}[gcd(i,j)==k]\%p<br>$$</p><p>$$<br>=\sum_{k=1}^{min(n,m)}\frac{k}{φ(k)}\sum_{i=1}^{n}\sum_{j=1}^m[gcd(i,j)==k]\%p<br>$$</p><p>$$<br>=\sum_{k=1}^{min(n,m)}\frac{k}{φ(k)}\sum_{i=1}^{\lfloor\frac{n}{k}\rfloor}\sum_{j=1}^{\lfloor\frac{m}{k}\rfloor}[gcd(i,j)==1]\%p<br>$$</p><p>$$<br>=\sum_{k=1}^{min(n,m)}\frac{k}{φ(k)}\sum_{i=1}^{\lfloor\frac{n}{dk}\rfloor}\sum_{j=1}^{\lfloor\frac{m}{dk}\rfloor}<br>\sum_{d=1}^{min(n,m)}μ(d)\%p<br>$$</p><p>$$<br>=\sum_{k=1}^{min(n,m)}\frac{k}{φ(k)}\sum_{d=1}^{min(n,m)}μ(d){\lfloor\frac{n}{dk}\rfloor}{\lfloor\frac{m}{dk}\rfloor}\%p<br>$$</p><p>就可以做啦！</p><p>枚举k=1~min(n,m)，先分析出要预先求的东西：</p><ol><li>μ(d)</li><li>φ(k)</li></ol><p>预处理：由于n/dk向下取整时，当dk&gt;n，值为0，因此我们只要先枚举dk=1到min(n,m)即可。</p><p>然后对于for(k)，dk为d的倍数增长，此时，d=dk/k,将μ(dk/k)、n/dk、m/dk相乘，取模得到F(k)+=。</p><p>计算：然后就可以一个大循环，枚举k从1~min(n,m)，求得k*逆元(φ(k))，再*先前求得的F(k)，并取模即可。</p><p>注意：由于时间限制， 取模一定要尽量少取。特别是在预处理阶段中，求F(k)时，由于F(k)是重复累加的，因此若是<strong>每一次累加都取模，会造成不必要的时间浪费</strong>，因此我们可以把F(k)开long long，然后在全部预处理完毕之后再一次性for取模。</p><h2 id="看！代码"><a href="#看！代码" class="headerlink" title="看！代码"></a>看！代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll MOD;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1000000</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> phi[maxn],mu[maxn],prim[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">ll quzheng[maxn],f[maxn];</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line"><span class="function">ll <span class="title">ex_gcd</span><span class="params">(ll a,ll b,ll &amp;x,ll &amp;y)</span><span class="comment">//扩展欧几里得（扩展gcd）</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a==<span class="number">0</span>&amp;&amp;b==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span> (b==<span class="number">0</span>)&#123;x=<span class="number">1</span>;y=<span class="number">0</span>;<span class="keyword">return</span> a;&#125;</span><br><span class="line">ll d=ex_gcd(b,a%b,y,x);</span><br><span class="line">y-=a/b*x;</span><br><span class="line"><span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">mod_inverse</span><span class="params">(ll a,ll n)</span><span class="comment">//乘法逆元，a与n必须互素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll x,y;</span><br><span class="line">ll d = ex_gcd(a,n,x,y);</span><br><span class="line"><span class="keyword">return</span> (x%n+n)%n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 对于μ函数的线筛 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_mu</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mu[<span class="number">1</span>]=phi[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(!vis[i])&#123;prim[++cnt]=i;mu[i]=<span class="number">-1</span>;phi[i]=i<span class="number">-1</span>;&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;prim[j]*i&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">        vis[prim[j]*i]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(i%prim[j]==<span class="number">0</span>) &#123;phi[i*prim[j]]=phi[i]*prim[j];<span class="keyword">break</span>;&#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;mu[i*prim[j]]=-mu[i];phi[i*prim[j]] = phi[i] * phi[prim[j]];&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">    <span class="keyword">int</span> MIN=min(n,m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MIN;i++) quzheng[i]=<span class="number">1l</span>l*(n/i)*(m/i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MIN;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=MIN;j+=i)</span><br><span class="line">            f[i]+=<span class="number">1l</span>l*mu[j/i]*quzheng[j];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MIN;i++) <span class="comment">//就是这个TLE</span></span><br><span class="line">        f[i]%=MOD;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,t;</span><br><span class="line">    get_mu(<span class="number">1000000</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%lld"</span>,&amp;m,&amp;n,&amp;MOD);</span><br><span class="line">        cal(n,m);</span><br><span class="line">        <span class="keyword">int</span> MIN=min(n,m);</span><br><span class="line">        ll ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MIN;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans=(ans+(<span class="number">1l</span>l*i*mod_inverse(phi[i],MOD))%MOD*f[i]+MOD)%MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;GuGuFishtion&quot;&gt;&lt;a href=&quot;#GuGuFishtion&quot; class=&quot;headerlink&quot; title=&quot;GuGuFishtion&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
      <category term="算法" scheme="http://github.com/xxq1999/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="莫比乌斯反演" scheme="http://github.com/xxq1999/tags/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/"/>
    
  </entry>
  
  <entry>
    <title>Prefix Free Code</title>
    <link href="http://github.com/xxq1999/2018/08/12/Prefix-Free-Code/"/>
    <id>http://github.com/xxq1999/2018/08/12/Prefix-Free-Code/</id>
    <published>2018-08-12T13:54:26.966Z</published>
    <updated>2018-08-12T13:54:26.967Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Prefix-Free-Code"><a href="#Prefix-Free-Code" class="headerlink" title="Prefix Free Code"></a><a href="https://nanti.jisuanke.com/t/29556" target="_blank" rel="noopener">Prefix Free Code</a></h2><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给你n个字符串，这些字符串都不是互相的前缀，再给你一个模式串。模式串由k个其中的字符串任意排列组成。求这个模式串是从中选k个按照字典序排列组成的第几个串？</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>用全排列的方法，1~n表示前n个字符串，用字符串哈希的方法把他们压缩成数字放在map里映射字符串的序号。</p><p>然后遍历模式串。对于每找到一个字符串，按照（比此序号小的字符串-前面已经用掉的字符串的个数）*剩下的位子的全排列数量乘以原先算出来的种数，然后把这个新找到的字符串add到树状数组中，用来标记已经用掉的字符串的个数。</p><h2 id="看！代码"><a href="#看！代码" class="headerlink" title="看！代码"></a>看！代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1000010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll fac[<span class="number">1000010</span>];</span><br><span class="line">ll inv[<span class="number">1000010</span>];</span><br><span class="line"><span class="built_in">string</span> s[<span class="number">1000010</span>];</span><br><span class="line"><span class="built_in">string</span> ss;</span><br><span class="line"><span class="keyword">const</span> ll base=<span class="number">131</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1234567891011l</span>l;</span><br><span class="line"><span class="built_in">unordered_map</span>&lt;ll,<span class="keyword">int</span>&gt;mp;</span><br><span class="line"><span class="function">ll <span class="title">solve</span><span class="params">(<span class="keyword">int</span> id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len=s[id].size();</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">        ans=(ans*base+(s[id][i]))%mod;</span><br><span class="line">    <span class="keyword">return</span> ans;<span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> d[<span class="number">1000010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x)</span><br><span class="line">    &#123;</span><br><span class="line">        res+=d[x];</span><br><span class="line">        x-=lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x&lt;=n)</span><br><span class="line">    &#123;</span><br><span class="line">        d[x]+=v;</span><br><span class="line">        x+=lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">PowerMod</span><span class="params">(ll a,ll b,ll c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans=<span class="number">1</span>;</span><br><span class="line">    ll k;</span><br><span class="line">    k=a;</span><br><span class="line">    k=k%c;</span><br><span class="line">    <span class="keyword">while</span>(b&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)</span><br><span class="line">            ans=(ans*k)%c;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        k=(k*k)%c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fac[<span class="number">0</span>]=fac[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;i++)</span><br><span class="line">        fac[i]=fac[i<span class="number">-1</span>]*i%MOD;</span><br><span class="line">    inv[MAXN]=PowerMod(fac[MAXN],MOD<span class="number">-2</span>,MOD);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=MAXN<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        inv[i]=inv[i+<span class="number">1</span>]*(i+<span class="number">1</span>)%MOD;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s[i];</span><br><span class="line">    sort(s+<span class="number">1</span>,s+n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll tot=solve(i);</span><br><span class="line">        mp[tot]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;ss;</span><br><span class="line">    <span class="keyword">int</span> len=ss.size();</span><br><span class="line">    ll temp=<span class="number">0</span>;</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        temp=(temp*base+(ss[i]))%mod;</span><br><span class="line">        <span class="keyword">if</span>(mp[temp]!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            <span class="keyword">int</span> id=mp[temp];</span><br><span class="line">            ll sum=<span class="number">1</span>;</span><br><span class="line">            sum=id<span class="number">-1</span>-query(id);</span><br><span class="line">            sum=((fac[n-cnt]*inv[n-k])%MOD*sum)%MOD;</span><br><span class="line">            ans=(ans+sum)%MOD;</span><br><span class="line">            temp=<span class="number">0</span>;</span><br><span class="line">            add(id,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(ans+<span class="number">1</span>)%MOD);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;Prefix-Free-Code&quot;&gt;&lt;a href=&quot;#Prefix-Free-Code&quot; class=&quot;headerlink&quot; title=&quot;Prefix Fre
      
    
    </summary>
    
      <category term="算法" scheme="http://github.com/xxq1999/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="全排列构造" scheme="http://github.com/xxq1999/tags/%E5%85%A8%E6%8E%92%E5%88%97%E6%9E%84%E9%80%A0/"/>
    
      <category term="字符串哈希" scheme="http://github.com/xxq1999/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C/"/>
    
  </entry>
  
  <entry>
    <title>Recovery(构造)</title>
    <link href="http://github.com/xxq1999/2018/08/12/recovery/"/>
    <id>http://github.com/xxq1999/2018/08/12/recovery/</id>
    <published>2018-08-12T13:38:46.452Z</published>
    <updated>2018-08-12T13:38:11.063Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Recovery"><a href="#Recovery" class="headerlink" title="Recovery"></a><a href="https://nanti.jisuanke.com/t/29559" target="_blank" rel="noopener">Recovery</a></h2><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给两行，由01组成，一行表示行中1的个数，一行表示列中1的个数，奇数为1，偶数为0。</p><p>如果不能构造就是-1，能就输出原来的矩阵的样子。</p><p>按照1尽可能的多，然后字典序小。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>不太好说，这个。。。。就。。。看代码吧。</p><p>主要是发现行列之间1的关系，以及如何放比较好，。</p><h2 id="看！代码"><a href="#看！代码" class="headerlink" title="看！代码"></a>看！代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> hang;</span><br><span class="line">    <span class="built_in">string</span> lie;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;hang&gt;&gt;lie;</span><br><span class="line">    <span class="keyword">int</span> h[<span class="number">55</span>],l[<span class="number">55</span>];</span><br><span class="line">    <span class="keyword">int</span> lenh,lenl;</span><br><span class="line">    <span class="keyword">int</span> cnth=<span class="number">0</span>,cntl=<span class="number">0</span>;</span><br><span class="line">    lenh=hang.size(),lenl=lie.size();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lenh;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(hang[i]==<span class="string">'0'</span>&amp;&amp;lenl%<span class="number">2</span>==<span class="number">0</span>||hang[i]==<span class="string">'1'</span>&amp;&amp;lenl%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">            h[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> h[i]=<span class="number">1</span>,cnth++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lenl;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(lie[i]==<span class="string">'0'</span>&amp;&amp;lenh%<span class="number">2</span>==<span class="number">0</span>||lie[i]==<span class="string">'1'</span>&amp;&amp;lenh%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">            l[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> l[i]=<span class="number">1</span>,cntl++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cnth%<span class="number">2</span>!=cntl%<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(cnth&lt;cntl)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((h[i]+<span class="number">2</span>)&lt;=lenl) h[i]+=<span class="number">2</span>,cnth+=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span> i++;</span><br><span class="line">    &#125;</span><br><span class="line">    i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(cnth&gt;cntl)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((l[i]+<span class="number">2</span>)&lt;=lenh) l[i]+=<span class="number">2</span>,cntl+=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span> i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;lenh;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;lenl;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(h[i]!=<span class="number">0</span>&amp;&amp;l[j]!=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h[i]--,l[j]--;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"1"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;Recovery&quot;&gt;&lt;a href=&quot;#Recovery&quot; class=&quot;headerlink&quot; title=&quot;Recovery&quot;&gt;&lt;/a&gt;&lt;a href=&quot;htt
      
    
    </summary>
    
      <category term="算法" scheme="http://github.com/xxq1999/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>Bramasole</title>
    <link href="http://github.com/xxq1999/2018/08/12/Bramasole/"/>
    <id>http://github.com/xxq1999/2018/08/12/Bramasole/</id>
    <published>2018-08-12T13:22:08.924Z</published>
    <updated>2018-08-12T13:22:08.945Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><img src="\mdpicture\托斯卡纳艳阳下.jpg" alt="白色恋人，浪漫的意大利男性，治愈的开始，另一场人生的结束"></p><blockquote><p>“我把集市上买的一颗热葡萄塞进嘴里，肆意的甜蜜在口腔蔓延，甚至闻起来也是紫色的。”</p></blockquote><p>这大概是在整部电影中让我印象最深刻的一句话了。</p><p>在徐志摩先生笔下，佛罗伦萨（翡冷翠）是有风穿过橄榄林带来着石榴花香，蓝天白云下有色彩鲜艳的隔壁，深绿色的百叶窗和深红色的屋顶，隔着夜，隔着天，通着恋爱的灵犀一点。旅行、到一个五颜六色的地方，认识五颜六色的陌生人。在看完这部电影之后，我几乎就想即刻动身了。我知道有这么一个地方，它有充足的阳光，适合葡萄生长，也适合酿造爱情和生活，“当太阳照在山顶上的伊特鲁里亚石壁上，洋槐树就被镶上金边，色彩柔和的房子沿着小河岸弯弯曲曲的排列，如同水彩画一般”，“微风吹拂的白色窗帘，墙角灰白色的陶罐，麦田里新收的草卷儿”。我希望一动不动的盯着这片土地，天旋地转。旅行的魅力。</p><p>而托斯卡纳的乡野，总会使人联想起高更、梵高那些大师们的画笔，大片大片浓厚的色彩，金色的、橘色的、紫罗兰色的，这般会流动的色彩。语言在其面前是多么苍白。如果可以，我甚至想把那些灿烂的色彩贴在这张白纸上。像墨绿的火焰一样朝向天空的树林，金光流溢的草原，盛开的虞美人，色彩的盛宴。</p><p>这里有达芬奇，有文艺复兴，还有郁郁葱葱长满葡萄藤的山坡。</p><p>然后弗兰西斯来到了这里。</p><p>在明信片上写下了“紫色”的心情，开始改变，是托斯卡纳送给她的第一份礼物。</p><p>原本只是一场失意的旅行，却用自己所有的积蓄买下了一座破败不堪的，连水龙头都出不了水的小房子——“Bramasole”，意大利语向往阳光的意思。命运的突然就像是在“Bramasole”中被白鸽的粪便砸中，而过去就像海中突然陆沉的岛屿，一下子消失不见了。然后一切就成真了。新生活是具体的，一砖一瓦，雕花的铁床，栏杆上的画像，刚刚成熟的橄榄，从此她拥有“三口水井、一条罗马古道、一处伊特拉斯坎人的古城墙遗址、一条地下信道、一百一十七棵橄榄树、二十棵李树、以及其他数也数不清处的果树和花丛，还可以在屋外铺着亚麻布的长桌上，吃着用院子里才来的鼠尾草做馅料的意大利方饺，敲开路边捡来的球果、用其中的松仁做出香味四溢的老祖母馅饼……”这座房子实在是太老了，就像你会随时倒下去长眠不醒的老祖母。</p><p>而生活就是与人不停的邂逅，不停的与周边的环境发生关系。</p><p>在她落寞绝望时充满耐心的安慰她的可靠的房产中介，靠美和灵性生活，永远纯真如孩童叫她振作起来的神秘女郎，帮法兰西斯修房子的修缮工们，还有每天早晨为路边的圣母像献上鲜花，悼念亡妻的老人，以及属于她的一场短暂的罗曼蒂克史。</p><p>一点一点回移的日子就好像小野丽莎的歌，fly me to the moon，柔柔软软轻轻悄悄的，不经意而温柔的掠过。</p><p>治愈是我所有能形容这部电影的词汇。</p><p>其实那个时候刚好是我生活的极大转折点——一个不知道会往哪里转向的，不知是褒义还是贬义的转折点。说不知道，但当时的我，连呼吸都是不知所措。在不愿意接受的悲伤中也思考生活的方向，我知道我为什么不愿意接受这样的转折，尽管它的本质是好的。就像弗兰西斯，离婚也是她不愿意接受的事实，是很难走出来的人生巨大的转折点。在这样的时刻，往往所有的注意力会被吸引，会失去对其他事物的热情，天晴的时候在下雨，下雨的时候整个人都会湿透。弗兰西斯在忙碌琐碎的装修之中顾不及心碎的滋味，但我一静下来，手头空空荡荡的时候，各种情绪翻江倒海的来了，落魄不止。</p><p>我听到弗兰西斯一个人的嘶喊：</p><p>“我一个人住那么大的房子有什么用？”</p><p>那你为什么还要在这里？</p><p>“因为我厌倦了恐惧，因为我的心底仍然有希望。”</p><p>“我想要在这里举办一场婚礼，我想要有一个家。”</p><p>有时候遇到很糟糕的境遇，躲不开、避不掉的重重压力围城，生活被就像被胡乱泼了墨。在这个时候，希望是最美好的东西。</p><p>好心的中介讲了这么一个故事，他说奥地利和意大利之间的阿尔卑斯山脉中有一段叫做塞默灵，那段山脉地势险峻，令人望而生畏，他们在那里建造了连通维也纳和威尼斯的铁路。尽管当时根本没有火车可以驶过，但他们依然把铁轨铺好了，因为他们知道总有一天会有火车驶过。 </p><p>你不必期待、不必翘首以盼，该来的总会来，而你，只需要做好准备。</p><p>杨绛先生说：“人的一切痛苦本质上都是对自己无能的愤怒。”有时候我们不快乐，是因为想要的太多，希望一切都在自己的手里。但是又何必呢，我们掌握不了的东西就任其流浪，有一句很俗很俗的话讲，该来的总会来。“当我还是个小女孩时，我总是数小时地看瓢虫，最后，我会放弃，然后在草地上睡着了。当我醒来的时候，它们爬得我满身都是。”</p><p>影片的最后，弗兰西斯的愿望在托斯卡纳实现了。她想要一个家，托斯卡纳给了她一个靠自己撑起来的家；她想要一场婚礼，一对漂亮真挚的小爱人在她的家里举办了婚礼；她想要孩子，她的好友带着自己刚出世的宝宝和自己的同性恋人来她的房子度假。她想要的一切都有了，只是换了一种方式。</p><p>最终，屋子里干涸的水龙头会有潺潺的流水，而好事总会来到，而当它来晚时，也不失为一种惊喜。</p><p>“希望你也在这里。”</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;&lt;img src=&quot;\mdpicture\托斯卡纳艳阳下.jpg&quot; alt=&quot;白色恋人，浪漫的意大利男性，治愈的开始，另一场人生的结束&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;

      
    
    </summary>
    
      <category term="Life &amp; Story" scheme="http://github.com/xxq1999/categories/Life-Story/"/>
    
    
      <category term="随想" scheme="http://github.com/xxq1999/tags/%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>在比赛中遇到的稀奇古怪的结论</title>
    <link href="http://github.com/xxq1999/2018/08/09/%E5%9C%A8%E6%AF%94%E8%B5%9B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E7%A8%80%E5%A5%87%E5%8F%A4%E6%80%AA%E7%9A%84%E7%BB%93%E8%AE%BA/"/>
    <id>http://github.com/xxq1999/2018/08/09/在比赛中遇到的稀奇古怪的结论/</id>
    <published>2018-08-09T12:24:25.000Z</published>
    <updated>2018-08-13T17:09:44.743Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><strong>将多边形对角线相连，其对角线最多被分割成多少段？</strong></p><p>$$<br>max=(n^4-6n^3+17n^2-24n)/12<br>$$</p><p><strong>一个圆，一个圆的内接n边形，连接多边形对角线，求整个圆被分割成几块?</strong></p><p>$$<br>max=(n^4-6n^3+23n^2-18n+24)/24<br>$$</p><p><strong>根号函数的性质：</strong>$\sqrt{a+b+c+…}\le\sqrt{a}+\sqrt{b}+\sqrt{c}+…$</p><p><strong>多边形公式</strong></p><p>$$S=\frac{1}{2}\left|\sum\limits_{i=0}^{n-1}(X_iY_{i+1}-X_{i+1}Y_i)\right|$$</p><p>其中是相邻的点，对于n-1的i+1是0代表这第一个点，由于顺时针逆时针会使正负号改变，所以取绝对值。</p><p><strong>摆线与圆面积关系</strong></p><ol><li>摆线留下的面积是圆面积的三倍。</li><li>它的长度等于旋转圆直径的 4 倍，是 一个不依赖于π的有理数。</li></ol><p>摆线定义：摆线(cycloid)是数学中众多的迷人曲线之一．它是这样定义的：一个圆沿一直线缓慢地滚动，则圆上一固定点所经过的轨迹称为摆线．</p><p><strong>两条直线夹角</strong></p><p>$${\left|\frac{A_{1}B_{2}-A_{2}B_{1}}{A_{1}A_{2}+B_{1}B_{2}}\right|}$$</p><p><strong>素数定理</strong><br>$$\lim\limits_{n-&gt;\infty}\frac{\pi(n)}{n/\ln{n}}$$</p><p>描述素数的分布，素数分布规律，以36N（N+1）为单位，随着N的增大，素数的个数发波浪形式渐渐增多。素数定理可以给出第n个素数p(n)的渐近估计： 它也给出从整数中抽到素数的概率。从不大于n的自然数随机选一个，它是素数的概率大约是1/ln n。 π(n)为小于等于n的素数的个数。</p><p><strong>GCD(1)</strong><br>a&gt; 0；m,n &gt; 0，那么有$$\gcd(a^m-1,a^n-1)=a^{gcd(m,n)}-1$$</p><p><strong>GCD(2)</strong><br>a&gt;b;gcd(a,b)=1,那么$\gcd(a^m-b^m,a^n-b^n)=a^{\gcd(m,n)}-{b^{\gcd(m,n)}} $</p><p><strong>GCD(3)</strong><br>设$$\gcd(a^m-1,a^n-1)=a^{gcd(m,n)}-1$$,那么G的值为<br>(1)n为素数，那么答案就是n。<br>(2)n有多个素因子，那么答案就是1。<br>(3)n只有一个素因子，那么答案就是该因子。</p><p><strong>GCD(4)</strong></p><p>$$\sum\limits_{i=1}^{N}\gcd(i,N)=\sum\limits_{d|N}dφ(\frac{N}{d})=\sum\limits_{d|N}\frac{N}{d}φ(d)$$</p><p>φ(x)为欧拉函数，d是N的质因子</p><p><strong>欧拉函数</strong></p><p>$\sum_{d|n}\varphi(d)=n $</p><p><strong>Fibonacci(1)</strong><br>设Fn为Fib数，那么有$$\gcd(F_m,F_n) = F_{gcd(m,n)}​$$</p><p><strong>Fibonacci(2)</strong><br>给定两个互素的正整数A和B，那么它们最大不能组合的数为A∗B−A−B不能组合的个数为$$num=\frac{(A-1)(B-1)}{2}$$</p><p><strong>lcm(1)</strong><br>$$(n+1)lcm(C_n^0,C_n^1,\cdots,C_n^n)=lcm(1,2,\cdots,n+1)$$</p><p><strong>lcm(2)</strong><br>给一个正整数n，求lcm(1,2,3,⋯,n)lcm(1,2,3,⋯,n)的值，(1&lt;=n&lt;=10^8)</p><p>定义L(n)L(n)为1,2,3,……,n的最小公倍数。则可以发现：<br>$$<br>L(n+1)=L(n)*p \ \ \ \ \   \ \ \ \ \ 如果(n+1)是p的次方数<br>$$</p><p>$$<br>= L(n)     \ \  \ \ \ \  \ \  \ \ \  \ 否则<br>$$</p><p>所以有: </p><p>L(1) = 1<br>L(2) = 1 x 2<br>L(3) = 1 x 2 x 3<br>L(4) = 1 x 2 x 3 x 2<br>L(5) = 1 x 2 x 3 x 2 x 5<br>L(6) = 1 x 2 x 3 x 2 x 5<br>L(7) = 1 x 2 x 3 x 2 x 5 x 7</p><p><strong>φ(ab)和gcd(a,b)的关系</strong><br>$$<br>\frac{φ(ab)}{φ(a)φ(b)}=\frac{gcd(a,b)}{φ(gcd(a,b))}<br>$$</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;&lt;strong&gt;将多边形对角线相连，其对角线最多被分割成多少段？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;$$&lt;br&gt;max=(n^4-6n^3+17n^2-24n)/12&lt;br&gt;$
      
    
    </summary>
    
      <category term="算法" scheme="http://github.com/xxq1999/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>はなび</title>
    <link href="http://github.com/xxq1999/2018/08/09/%E5%B0%8F%E5%81%B7%E5%AE%B6%E6%97%8F/"/>
    <id>http://github.com/xxq1999/2018/08/09/小偷家族/</id>
    <published>2018-08-09T12:02:57.583Z</published>
    <updated>2018-08-12T13:26:58.954Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><link href="/style.css" rel="stylesheet" type="text/css"><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" Please give the password. "/> <label for="pass"> Please give the password. </label> <div class="bottom-line"></div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div>]]></content>
    
    <summary type="html">
    
      &lt;br/&gt; &lt;blockquote&gt;他呈现的不是道德的是非，而是道德的困境。&lt;br/&gt; 他帮你撕掉人们身上的标签，让你看见那一个一个人。那些和你一样，有血有肉，有夜里开着灯等他们回家的亲人。&lt;br/&gt; 他尽力展现生活的复杂，让你看到算计，也看到算计背后的温情，让你了解，体谅，让你珍惜”有点肮脏的世界，忽然变得美好了起来的瞬间”。&lt;/blockquote&gt;&lt;&gt;&lt;br/&gt;&lt;img src=&quot;\mdpicture\海边.jpg&quot; alt=&quot;海边&quot;&gt;
    
    </summary>
    
      <category term="Life &amp; Story" scheme="http://github.com/xxq1999/categories/Life-Story/"/>
    
    
      <category term="随想" scheme="http://github.com/xxq1999/tags/%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>懵逼钨丝常用套路公式</title>
    <link href="http://github.com/xxq1999/2018/08/09/%E6%87%B5%E9%80%BC%E9%92%A8%E4%B8%9D%E5%B8%B8%E7%94%A8%E5%A5%97%E8%B7%AF%E5%85%AC%E5%BC%8F/"/>
    <id>http://github.com/xxq1999/2018/08/09/懵逼钨丝常用套路公式/</id>
    <published>2018-08-09T12:02:30.162Z</published>
    <updated>2018-08-09T12:02:30.362Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ol><li><p>$[n=1]=\sum_{d|n}\mu_d $ </p><p><strong>可以把一个“判一”的式子化成可以计算的函数</strong> </p><p>$[\gcd(a,b)=1]=\sum_{d|\gcd(a,b)}\mu_d $</p></li><li><p>$n=\sum_{d|n}\varphi_d $ </p><p><strong>把一个数化到枚举范围里面去</strong> </p><p>$\gcd(a,b)=\sum_{d|\gcd(a,b)}\varphi_d $</p></li><li><p><strong>重排变换</strong></p><p>$\sum_{i=1}^n\sum_{d|\gcd(i,n)}f_d=\sum_{d|n}f_d\lfloor\frac{n}{d}\rfloor $</p></li><li><p><strong>混合重排变换</strong> </p><p>$\sum_{i=1}^n\sum_{d|\gcd(i,m)}f_d=\sum_{d|m}f_d\lfloor\frac{n}{d}\rfloor $</p></li><li><p><strong>扩展混合重排变换</strong>  </p><p>$\sum_{i=1}^n\sum_{d|\gcd(i,m)}f_dg_i=\sum_{d|m}f_d\sum_{i=1}^{\lfloor\frac{n}{d}\rfloor}g_{id} $</p></li><li><p><strong>扩展变换</strong> </p><p>$\sum_{i=1}^n[d|i]f_i=\sum_{i=1}^{\lfloor\frac{n}{d}\rfloor}f_{id}$</p></li><li><p><strong>收缩变换</strong> </p><p>$\sum_{i=1}^n\sum_{d|i}f_d=\sum_{i=1}^n\sum_{d=1}^{\lfloor\frac{n}{i}\rfloor}f_d $</p></li><li><p><strong>杜教筛变换</strong> </p></li><li><p><strong>约数个数变换</strong> </p><p>$d(x)=d_{nm}=\sum_{i|n}\sum_{j|m}[\gcd(i,j)=1] $</p><p>x的约数个数</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;$[n=1]=\sum_{d|n}\mu_d $ &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可以把一个“判一”的式子化成可以计算的函数&lt;/strong&gt; &lt;/p&gt;
&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Journey with Knapsack(令人自闭的母函数+五边形定理)</title>
    <link href="http://github.com/xxq1999/2018/08/09/Journey-with-Knapsack(%E4%BB%A4%E4%BA%BA%E8%87%AA%E9%97%AD%E7%9A%84%E6%AF%8D%E5%87%BD%E6%95%B0+%E4%BA%94%E8%BE%B9%E5%BD%A2%E5%AE%9A%E7%90%86)/"/>
    <id>http://github.com/xxq1999/2018/08/09/Journey-with-Knapsack(令人自闭的母函数+五边形定理)/</id>
    <published>2018-08-09T12:02:10.358Z</published>
    <updated>2018-08-10T17:28:47.253Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Journey-with-Knapsack"><a href="#Journey-with-Knapsack" class="headerlink" title=" Journey with Knapsack"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6042" target="_blank" rel="noopener"> Journey with Knapsack</a></h1><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>有一个<em>容量</em>为2n的背包，n种食物，每种食物的体积为i，最多有$a_i$个，除了食物，还有m件装备，每件装备的体积是$b_i$，必须带一件装备，问2n的背包能够装下的所有情况种数？</p><p>1&lt;=n&lt;=5e4 , 0&lt;=ai&lt;=2n , 1&lt;=m&lt;=2n，0&lt;=bi&lt;=2n。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p><strong>背包全部装食物的方案数：</strong></p><p>$$<br>\prod_{i=1}^n(1+x^i+x^{2i}+…+x^{a_ii})=\prod_{i=1}^n\frac{1-x^{i(a_i+1)}}{1-x^i}<br>$$</p><p>$$<br>=\prod_{i=1}^n(1-x^{i(a_i+1)}) \prod_{i=1}^n(\frac{1}{1-x^i})<br>$$</p><p><strong>对于左边的累乘进行分析：</strong></p><ol><li>假设右边部分已经求得，是一个2n项（后面会求到）多项式：$\sum_{i=1}^{2n}dp[i]*x^i$(dp[i]的i指的是体积，dp的值是种数)</li><li>那么原式子就变成，左边的n个两项式与右边的的2n项式相乘，有：</li></ol><p>$$<br>(1-x^{i(a_i+1)})(\sum_{j=1}^{2n}dp[j]x^j)<br>$$</p><p>$$<br>=\sum_{j=1}^{2n}dp[j]x^j-\sum_{j=1}^{2n}dp[j]x^{i(a_i+1)+j}<br>$$</p><p>​    我们将j向右移$i*(a_i+1)$位，则：</p><p>$$<br>=\sum_{j=1}^{2n}dp[j]x^j-\sum_{j=i(a_i+1)}^{2n+i(a_i+1)}dp[j-i(a_i+1)]x^j<br>$$</p><p>$$<br>=\sum_{j=1}^{i(a_i+1)}dp[j]x^j+\sum_{j=i(a_i+1)}^{2n}(dp[j]-dp[j-i(a_i+1)])x^j<br>$$</p><pre><code>（由于2n以后的项都没有意义，所以可以减少到2n）</code></pre><ol><li>由于前面的假设1，dp[j]已经求得，因此我们只要再求得对所有$i*(a_i+1)\le{j}\le2n$，再求：</li></ol><p>$$<br>dp[j]=dp[j]-dp[j-i*(a_i+1)]<br>$$</p><p><strong>对于右边的累乘：</strong><br>$$<br>\prod_{i=1}^n(\frac{1}{1-x^i}) = \prod_{i=1}^{2n}(\frac{1}{1-x^i}) \prod_{i=n+1}^{2n}({1-x^i})（不满2n所以补上）<br>$$</p><ol><li>对于左边的式子，根据五边形定理：</li></ol><p>$$<br>Q(x)=\sum_{i\ge1}(1-x^i)=\sum_{i\ge1}(-1)^i(x^{\frac{3i^2-i}{2}}+x^{\frac{3i^2+i}{2}})=(1-x)(1-x^2)…=1-x-x^2+x^5+x^7+……<br>$$</p><p>​    整数拆分的式子是这样的：<br>$$<br>P(x)=(1+x+x^2+…)（1+x^2+x^4+…）(1+x^3+x^6+…)<br>$$</p><p>$$<br>=\prod_{i\ge1}(1+x^i+x^{2i}+…)=\prod_{i\ge1}\frac{1}{1-x^i} （x&lt;1无穷等比数列求级数）<br>$$</p><p>​    因此我们可以看到：Q(x)P(x)=1，也就是说：<br>$$<br>(1-x-x^2+x^5+x^7+……)(1+p(1)x+p(2)x^2+p(3)x^3+…)=1<br>$$<br>​    因此我们考虑，对于每项x^n前面的系数，必定有：<br>$$<br>p(n)-p(n-1)-p(n-1)+p(n-5)+p(n-7)……=0<br>$$<br>​    因此得递推式：<br>$$<br>p(n)=p(n-1)+p(n-1)-p(n-5)-p(n-7)……<br>$$<br>​    可以求出dp[i]=p[i]。（i&lt;=2n）</p><ol><li><p>对于右边的式子$\prod_{i=n+1}^{2n}({1-x^i})$，由于累乘$x^a*x^b=x^{(a+b)}$，故对于a+b&gt;2n的都可以舍去。</p><p>就化为了：</p></li></ol><p>$$<br>1-\sum_{i=n+1}^{2n}x^i<br>$$</p><ol><li>整个式子就变成：</li></ol><p>$$<br>P(x)(1-\sum_{i=n+1}^{2n}x^i),P(x)=\sum_{i=1}^{2n}dp[i]x^i<br>$$</p><p>​<br>$$<br>=\sum_{i=1}^{2n}dp[i]x^i -\sum_{i=n+1}^{2n}dp[i-n-1]x^i-\sum_{i=n+2}^{2n}dp[i-n-2]x^i-……<br>$$</p><p>$$<br>=\sum_{i=1}^{n}dp[i]x^i+x^{n+1}(dp[n+1]-dp[0])+x^{n+2}(dp[n+2]-dp[1]-dp[0])+……<br>$$</p><p>$$<br>+x^{2n}(dp[2n]-dp[n-1]-dp[n-2]-…-dp[0])<br>$$</p><p>​    也就是说对于所有dp[i]，i&gt;=n+1,&lt;=2n的，都进行减去sum[i-n-1] (前缀和)的操作。即：<br>$$<br>dp[i]=dp[i]-\sum_{j=1}^{i-n-1}dp[j]<br>$$<br>​    那么所有的部分就都算完啦！！！！！！</p><p>啊啊啊啊啊啊啊啊啊啊啊啊啊</p><h2 id="看！代码"><a href="#看！代码" class="headerlink" title="看！代码"></a>看！代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> LL INF = <span class="number">1e9</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">100005</span>;</span><br><span class="line"><span class="keyword">const</span> LL MOD = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> q[<span class="number">2005</span>],f[MAXN];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> dp[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">five</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2000</span>;i+=<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        LL temp=(i+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">        q[i]=(<span class="number">3</span>*temp*temp-temp)/<span class="number">2</span>;</span><br><span class="line">        q[i+<span class="number">1</span>]=(<span class="number">3</span>*temp*temp+temp)/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    f[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MAXN;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>,c=<span class="number">1</span>;j&lt;=<span class="number">2000</span>;j+=<span class="number">2</span>,c*=<span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i-q[j]&lt;<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            f[i]=(f[i]+f[i-q[j]]*c+MOD)%MOD;</span><br><span class="line">            <span class="keyword">if</span>(i-q[j+<span class="number">1</span>]&lt;<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            f[i]=(f[i]+f[i-q[j+<span class="number">1</span>]]*c+MOD)%MOD;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,cas=<span class="number">1</span>;</span><br><span class="line">    LL a;</span><br><span class="line">    five();</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=(n&lt;&lt;<span class="number">1</span>);i++) dp[i]=f[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a);</span><br><span class="line">            LL b=(a+<span class="number">1</span>)*i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=n&lt;&lt;<span class="number">1</span>;j&gt;=b;j--) </span><br><span class="line">                dp[j]=(dp[j]-dp[j-b]+MOD)%MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n+<span class="number">1</span>,sum=<span class="number">0</span>;i&lt;=(n&lt;&lt;<span class="number">1</span>);i++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum=(sum+dp[i-n<span class="number">-1</span>])%MOD;</span><br><span class="line">            dp[i]=(dp[i]-sum+MOD)%MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(m--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a);</span><br><span class="line">            ans=(ans+dp[<span class="number">2</span>*n-a])%MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: %lld\n"</span>,cas++,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** 来自大神的参考思想！！</span></span><br><span class="line"><span class="comment">HDU 6042 - Journey with Knapsack [ 生成函数,五边形定理 ]  |  2017 Multi-University Training Contest 1</span></span><br><span class="line"><span class="comment">题意:</span></span><br><span class="line"><span class="comment">    n种物品，每种 a[i] 个，体积为 i，m 个武器，每个体积为 b[i]</span></span><br><span class="line"><span class="comment">    求2*n大小的背包里只能装一个武器，任意食物的方案数</span></span><br><span class="line"><span class="comment">    限制条件：</span></span><br><span class="line"><span class="comment">        a[i]各不相同且 0 &lt;= a[1] &lt;= a[2] &lt;= ... a[n] &lt;= 2*n</span></span><br><span class="line"><span class="comment">        n &lt;= 5e4</span></span><br><span class="line"><span class="comment">分析：</span></span><br><span class="line"><span class="comment">    先不考虑武器，求出任意i &lt;= 2*n 的放食物的方案数ans[2*n]，答案即为 ∑ ans[2*n - b[i]]</span></span><br><span class="line"><span class="comment">    其实本质和整数划分相同，限制了每个数字选择的次数</span></span><br><span class="line"><span class="comment">    考虑选择食物的生成函数：</span></span><br><span class="line"><span class="comment">        第i种食物的贡献因子 f(x) = 1 + x^i + x^2i + ... + x^(a[i]*i) = ( 1 - x^((ai+1)*i) ) / ( 1 - x^i )</span></span><br><span class="line"><span class="comment">    故   F(x) =  ∏ f(i) [1&lt;=i&lt;=n]</span></span><br><span class="line"><span class="comment">             = ∏ (1 - x^((ai+1)*i)) / (1-x^i) [1&lt;=i&lt;=n]</span></span><br><span class="line"><span class="comment">             = ∏ (1 - x^((ai+1)*i)) [1&lt;=i&lt;=n]  *  ∏ 1/(1-x^i) [1&lt;=i&lt;=n]</span></span><br><span class="line"><span class="comment"> ///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">    研究一下乘号左边这一项累乘：</span></span><br><span class="line"><span class="comment">        假设已求得乘号右边这一项 F'(x) = ∏ 1/(1-x^i) [1&lt;=i&lt;=2*n] = ∑ dp[i]*x^i [1&lt;=i&lt;=2*n]</span></span><br><span class="line"><span class="comment">        则两边多项式合并时，相当于一个n项的多项式（右边） 和 n个两项的多项式（左边）相乘</span></span><br><span class="line"><span class="comment">        假设左边第i项 (1 - x^((ai+1)*i)) 与 F'(x) 合并，则：</span></span><br><span class="line"><span class="comment">            (1 - x^((ai+1)*i)) * ( ∑ dp[j]*x^j [1&lt;=j&lt;=2*n] ) =</span></span><br><span class="line"><span class="comment">             ∑ dp[j]*x^j [1&lt;=j&lt;=n] - ∑ dp[j-(ai+1)*i] * x^j [(ai+1)*i) &lt;= j &lt;= 2*n+(ai+1)*i)]</span></span><br><span class="line"><span class="comment">              （多项式右移(ai+1)*i)次）</span></span><br><span class="line"><span class="comment">        由于体积只有2*n大小，故x^(2*n+1)项及以后无意义</span></span><br><span class="line"><span class="comment">            故上式 = ∑ dp[j]*x^j [1&lt;=j&lt;=n]  -  ∑ dp[j-(ai+1)*i] * x^j [(ai+1)*i) &lt;= j &lt;= 2*n]</span></span><br><span class="line"><span class="comment">                   = ∑ dp[j]*x^j [1&lt;=j&lt; (ai+1)*i)]  +  ∑ (dp[j]- dp[j-(ai+1)*i])*x^j [(ai+1)*i) &lt;= j &lt;= 2*n]</span></span><br><span class="line"><span class="comment">        即对于所有 (ai+1)*i &lt;= j &lt;= 2*n 的项，执行操作：</span></span><br><span class="line"><span class="comment">            dp[j] = dp[j] - dp[j-a(i+1)*i] （按01背包形式，至高往低）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        由于合并后 F'(x) 形式不变，故可循环合并 n 次</span></span><br><span class="line"><span class="comment">        单次合并复杂度 O(2*n - a(i+1)*i) = O(n)</span></span><br><span class="line"><span class="comment">        根据限制条件 0 &lt;= a[1] &lt;= a[2] &lt;= ... a[n] &lt;= 2*n ，可推得 ai &gt;= i-1, (ai+1)*i &gt;= i^2 （鸽巢原理）</span></span><br><span class="line"><span class="comment">        故 (ai+1)*i &lt;= 2*n 的项只有 O(n^0.5) 项</span></span><br><span class="line"><span class="comment">        故合并总时间复杂度 O(n^1.5)</span></span><br><span class="line"><span class="comment"> //////////////////////////////////////////</span></span><br><span class="line"><span class="comment">    研究一下乘号右边这一项累乘：</span></span><br><span class="line"><span class="comment">        其形式与无限制的整数划分的方案数的生成函数相同，由于目前只有n项累乘，按题意先补齐至2n项</span></span><br><span class="line"><span class="comment">        F'(x) = ∏ 1/(1-x^i) [1&lt;=i&lt;=n]</span></span><br><span class="line"><span class="comment">              = ∏ 1/(1-x^i) [1&lt;=i&lt;=2n]  *  ∏ (1-x^i) [n+1&lt;=i&lt;=2n]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        乘号左边这一项 P(x) 即2*n以内无限制的整数划分的方案数，根据五边形定理可以在 O(n^1.5) 预处理出</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        观察乘号右边那一项，虽然形式与上面讨论的累乘形式相近，但可以分析暴力合并复杂度 O(n^2)</span></span><br><span class="line"><span class="comment">        打开这个累乘，由于 n+1&lt;=i&lt;=2n ，任意两项 x^i * x^j = x^(i+j) ，此时i+j &gt; 2*n</span></span><br><span class="line"><span class="comment">        故去掉指数为 2n 以上的无效项后：</span></span><br><span class="line"><span class="comment">        ∏ (1-x^i) [n+1&lt;=i&lt;=2n]  =  1 - ∑x^i [n+1&lt;=i&lt;=2n]</span></span><br><span class="line"><span class="comment">        F'(x) = P(x)  *  ( 1 - ∑x^i ) [n+1&lt;=i&lt;=2n]</span></span><br><span class="line"><span class="comment">        令   P(x) = ∑ dp[i]*x^i [1&lt;=i&lt;=2n]，考虑合并：</span></span><br><span class="line"><span class="comment">        F'(x) =   ∑ dp[i] * x^i [1&lt;=i&lt;=2n]</span></span><br><span class="line"><span class="comment">                - ∑ dp[i-n-1] * x^i [n+1&lt;=i&lt;=2n]</span></span><br><span class="line"><span class="comment">                - ∑ dp[i-n-2] * x^i [n+2&lt;=i&lt;=2n]</span></span><br><span class="line"><span class="comment">                - ∑ dp[i-n-3] * x^i [n+3&lt;=i&lt;=2n]</span></span><br><span class="line"><span class="comment">                - ...</span></span><br><span class="line"><span class="comment">              =   ∑ dp[i] * x^i [1&lt;=i&lt;=n]</span></span><br><span class="line"><span class="comment">                + ∑ x^(n+1)  *  (dp[n+1] - dp[0])</span></span><br><span class="line"><span class="comment">                + ∑ x^(n+2)  *  (dp[n+1] - dp[0] - dp[1])</span></span><br><span class="line"><span class="comment">                + ∑ x^(n+2)  *  (dp[n+1] - dp[0] - dp[1] - dp[2])</span></span><br><span class="line"><span class="comment">                ...</span></span><br><span class="line"><span class="comment">        即对于所有 n+1 &lt;= j &lt;= 2*n 的项，执行操作：</span></span><br><span class="line"><span class="comment">            dp[j] = dp[j] - sum[j-n-1],  sum[]为dp[]的前缀和</span></span><br><span class="line"><span class="comment">        合并复杂度O(n)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    总时间复杂度O(n^1.5)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;Journey-with-Knapsack&quot;&gt;&lt;a href=&quot;#Journey-with-Knapsack&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
      <category term="算法" scheme="http://github.com/xxq1999/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="母函数" scheme="http://github.com/xxq1999/tags/%E6%AF%8D%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Werewolf</title>
    <link href="http://github.com/xxq1999/2018/08/09/Werewolf/"/>
    <id>http://github.com/xxq1999/2018/08/09/Werewolf/</id>
    <published>2018-08-08T16:14:59.613Z</published>
    <updated>2018-08-08T16:14:59.613Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Werewolf"><a href="#Werewolf" class="headerlink" title="Werewolf"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6370" target="_blank" rel="noopener">Werewolf</a></h1><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>狼人杀游戏，规定村民不能说假话，狼人可能说假话。</p><p>每一个人可以指认别人（除了自己）是村民或者是狼人。</p><p>根据这些指证，我们可以得出：</p><p>1、x号必为村民；</p><p>2、x号必为狼人；</p><p>3、x号可能是村民也可能是狼人。</p><p>问必为村民的人数和必为狼人的人数。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>题解的代码比较妙啊……</p><p>首先我们肯定能分析出不可能有必为村民的情况，因为所有人都可能是狼人这样的情况是成立的。</p><p>然后，我们又能发现，只有在环中，只存在一个狼人指证，和至少1个村民指证，那么才能确认其中的某一个人是狼人；</p><p>我们再通过这些确认的狼人，推出其他指证这些狼人为平民的人必为狼人。</p><h2 id="看！代码"><a href="#看！代码" class="headerlink" title="看！代码"></a>看！代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to;</span><br><span class="line">    <span class="keyword">int</span> v;</span><br><span class="line">&#125;g[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> ans[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vis[id]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(g[id].v==<span class="number">1</span>) <span class="comment">//我指证别人是村民</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[g[id].to]) <span class="comment">//指证的人没有被访问过，就要先让他过一下</span></span><br><span class="line">        &#123;</span><br><span class="line">            solve(g[id].to);</span><br><span class="line">            <span class="keyword">if</span>(ans[g[id].to]==<span class="number">-1</span>) ans[id]=<span class="number">-1</span>; <span class="comment">//我指证的是铁狼，那么我说了谎，我也是狼</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(ans[g[id].to]==id) ans[id]=<span class="number">-1</span>; <span class="comment">//我指证的人指证回了我，说明有个环，环中有一个狼人指证，那么我就是那个铁狼。</span></span><br><span class="line">            <span class="keyword">else</span> ans[id]=ans[g[id].to]; <span class="comment">//我也指向我指证的人的指证</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ans[g[id].to]==<span class="number">0</span>) ans[id]=N; <span class="comment">//如果有全为村民的环，这里体现为，我最终指证回了一开始的那个人，结果呢，他居然还是没有得到指证的指证的指证……的对象，说明不能确认他，也就是说是全村民环。</span></span><br><span class="line">        <span class="keyword">else</span> <span class="comment">//访问过啦，但是也不是全是村民</span></span><br><span class="line">        &#123;</span><br><span class="line">            ans[id]=ans[g[id].to]; <span class="comment">//我继续指证</span></span><br><span class="line">            <span class="keyword">if</span>(ans[id]==id) ans[id]=<span class="number">-1</span>; <span class="comment">//如果……</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="comment">//我指证别人是狼！但是啥都不一定，所以我指证指证。(- -|||)天呐我在说什么。。。</span></span><br><span class="line">        ans[id]=g[id].to; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,n,x;</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">20</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="built_in">memset</span>(ans,<span class="number">0</span>,<span class="keyword">sizeof</span>(ans));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;g[i].to);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">            <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">'w'</span>) g[i].v=<span class="number">0</span>;<span class="comment">//狼人</span></span><br><span class="line">            <span class="keyword">else</span> g[i].v=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">if</span>(ans[i]==<span class="number">0</span>)</span><br><span class="line">                solve(i);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">if</span>(ans[i]==<span class="number">-1</span>)cnt++;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0 %d\n"</span>,cnt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;Werewolf&quot;&gt;&lt;a href=&quot;#Werewolf&quot; class=&quot;headerlink&quot; title=&quot;Werewolf&quot;&gt;&lt;/a&gt;&lt;a href=&quot;htt
      
    
    </summary>
    
      <category term="算法" scheme="http://github.com/xxq1999/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>Color it (简单扫描)</title>
    <link href="http://github.com/xxq1999/2018/08/09/Color-it-(%E7%AE%80%E5%8D%95%E6%89%AB%E6%8F%8F)/"/>
    <id>http://github.com/xxq1999/2018/08/09/Color-it-(简单扫描)/</id>
    <published>2018-08-08T16:01:36.863Z</published>
    <updated>2018-08-08T16:01:07.922Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1>Color it</h1><h2>题意</h2><p>给你一个表格样，再给出m个圆，满足式子：$\sqrt{(i-x_c)^2+(j-y_c)^2}\le{r}$ 的，都要染成黑色，问你最后没有被染色的格子数。</p><p>思路就是简单模拟一下扫描线的操作，可以先对每一个圆，处理出圆内列对应的扫描线的长度，存在相应的列中。然后再遍历每一列，对于列中存在的扫描线，按照l小r大排序，然后如果这个区间的l要大于上个区间的r，ans就减去this.r-this.l+1，否则如果this.l&lt;last.r,并且this.r&gt;last.r，就this.r-last.r（不加1因为last.r已经算过），如果this.r&lt;last.r，则不必再计算。</p><h2>看！代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">1e4</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> up,down;</span><br><span class="line">    node(<span class="keyword">int</span> x,<span class="keyword">int</span> y)&#123;</span><br><span class="line">        up=x;down=y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.up==b.up) <span class="keyword">return</span> a.down&gt;b.down;</span><br><span class="line">    <span class="keyword">return</span> a.up&lt;b.up;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">int</span> n,m,q;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x,y,r,ux,dx,ly,ry;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;q);</span><br><span class="line">        <span class="built_in">vector</span> &lt;node&gt; v[MAXN*<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;q;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;r);</span><br><span class="line">            ly=max(<span class="number">0</span>,y-r);</span><br><span class="line">            ry=min(y+r,m<span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=ly;j&lt;=ry;j++) <span class="comment">//先处理出每列对应的扫描线，存下来</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> derta=<span class="built_in">sqrt</span>(r*r-(y-j)*(y-j));</span><br><span class="line">                ux=max(<span class="number">0</span>,x-derta);</span><br><span class="line">                dx=min(n<span class="number">-1</span>,x+derta);</span><br><span class="line">                v[j].push_back(node(ux,dx));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="keyword">int</span> last,ans=n*m;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) <span class="comment">//对应每一列存在的扫描线，先从l小，r大排序，然后判断计算</span></span><br><span class="line">        &#123;</span><br><span class="line">            len=v[i].size();</span><br><span class="line">            <span class="keyword">if</span>(len)</span><br><span class="line">            &#123;</span><br><span class="line">                last=<span class="number">-1</span>;</span><br><span class="line">                sort(v[i].begin(),v[i].end(),cmp);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(v[i][j].down&lt;=last)</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    <span class="keyword">if</span>(v[i][j].up&gt;last)</span><br><span class="line">                        ans-=v[i][j].down-v[i][j].up+<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(v[i][j].down&gt;last)</span><br><span class="line">                        ans-=v[i][j].down-last;</span><br><span class="line">                    last=v[i][j].down;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1&gt;Color it&lt;/h1&gt;

&lt;h2&gt;题意&lt;/h2&gt;

&lt;p&gt;给你一个表格样，再给出m个圆，满足式子：$\sqrt{(i-x_c)^2+(j-y_c)^2}\le{r}$ 
      
    
    </summary>
    
      <category term="算法" scheme="http://github.com/xxq1999/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>中国剩余定理模板</title>
    <link href="http://github.com/xxq1999/2018/08/08/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86%E6%A8%A1%E6%9D%BF/"/>
    <id>http://github.com/xxq1999/2018/08/08/中国剩余定理模板/</id>
    <published>2018-08-07T16:20:21.605Z</published>
    <updated>2018-08-07T16:20:21.606Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Extended_Euclid</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> &amp;y)</span>    <span class="comment">//扩展欧几里得算法</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> d;</span><br><span class="line"><span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">x=<span class="number">1</span>;y=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line">d=Extended_Euclid(b,a%b,y,x);</span><br><span class="line">y-=a/b*x;</span><br><span class="line"><span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Chinese_Remainder</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> w[],<span class="keyword">int</span> len)</span>    <span class="comment">//中国剩余定理  a[]存放余数  w[]存放两两互质的数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,d,x,y,m,n,ret;</span><br><span class="line">ret=<span class="number">0</span>;</span><br><span class="line">n=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">n*=w[i];</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">&#123;</span><br><span class="line">m=n/w[i];</span><br><span class="line">d=Extended_Euclid(w[i],m,x,y);</span><br><span class="line">ret=(ret+y*m*a[i])%n; <span class="comment">//注意这里如果会超出longlong的范围就要用快速乘</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> (n+ret%n)%n;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,i;</span><br><span class="line"><span class="keyword">int</span> w[<span class="number">15</span>],b[<span class="number">15</span>];</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n),n)   </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;w[i],&amp;b[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d/n"</span>,Chinese_Remainder(b,w,n));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/spa
      
    
    </summary>
    
      <category term="算法" scheme="http://github.com/xxq1999/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="模板" scheme="http://github.com/xxq1999/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="中国剩余定理" scheme="http://github.com/xxq1999/tags/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Lucas 模板</title>
    <link href="http://github.com/xxq1999/2018/08/08/Lucas-%E6%A8%A1%E6%9D%BF/"/>
    <id>http://github.com/xxq1999/2018/08/08/Lucas-模板/</id>
    <published>2018-08-07T16:18:17.970Z</published>
    <updated>2018-08-07T16:18:17.971Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">quick_mod</span><span class="params">(ll a,ll b,ll m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans = <span class="number">1</span>;</span><br><span class="line">    a %= m;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)</span><br><span class="line">            ans = ans * a % m;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        a = a * a % m;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">getC</span><span class="params">(ll n, ll m,ll mod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(m &gt; n)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(m &gt; n-m)</span><br><span class="line">        m = n-m;</span><br><span class="line">    ll a = <span class="number">1</span>,b = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(m)&#123;</span><br><span class="line">        a = (a*n)%mod;</span><br><span class="line">        b = (b*m)%mod;</span><br><span class="line">        m--;</span><br><span class="line">        n--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a*quick_mod(b,mod<span class="number">-2</span>,mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">Lucas</span><span class="params">(ll n,ll k,ll mod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(k == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> getC(n%mod,k%mod,mod)*Lucas(n/mod,k/mod,mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        ll n,m,mod;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld"</span>,&amp;n,&amp;m,&amp;mod);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,Lucas(n+m,m,mod));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/spa
      
    
    </summary>
    
      <category term="算法" scheme="http://github.com/xxq1999/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="模板" scheme="http://github.com/xxq1999/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="Lucas" scheme="http://github.com/xxq1999/tags/Lucas/"/>
    
  </entry>
  
  <entry>
    <title>Unknown Treasure(Lucas+中国剩余定理）</title>
    <link href="http://github.com/xxq1999/2018/08/08/Unknown%20Treasure/"/>
    <id>http://github.com/xxq1999/2018/08/08/Unknown Treasure/</id>
    <published>2018-08-07T16:04:38.807Z</published>
    <updated>2018-08-10T17:14:12.721Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Unknown-Treasure"><a href="#Unknown-Treasure" class="headerlink" title="Unknown Treasure"></a><a href="https://nanti.jisuanke.com/t/29337" target="_blank" rel="noopener">Unknown Treasure</a></h1><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给你n，m，和K个素数$p_1,p_2 …… p_k$，求$C_n^mmod\prod{p_i}$。</p><p>n,m&lt;=1e18。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>计算组合数用Lucas即可，每次取模Pi，然后由于最终是要模$\prod{p_i}$，所以用中国剩余定理。</p><blockquote><p>令 $tot = \prod{p_i} $，$X=C_n^mmod\prod{p_i}$，$K=\lfloor C_n^m/\prod{p_i}\rfloor$</p><p>有：$C_n^m=K*tot+X$</p><p>两边同对$pi$取模， </p></blockquote><p>$$<br>X \% p_1 = C_n^m \% p_1 = Lucas(n,m,p_1)<br>$$</p><p>$$<br>X \% p_2 = C_n^m \% p_2 = Lucas(n,m,p_2)<br>$$</p><p>$$<br>…<br>$$</p><p>$$<br>X \% p_n = C_n^m \% p_n = Lucas(n,m,p_n)<br>$$</p><p>$$<br>X \% p_1 = C_n^m \% p_1 = Lucas(n,m,p_1)<br>$$</p><blockquote><p>利用中国剩余定理求出X即可。</p><p>因为做乘法过程中可能会超long long ，所以我们要用快速乘法去处理，方便取模 </p></blockquote><h2 id="看！代码"><a href="#看！代码" class="headerlink" title="看！代码"></a>看！代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100005</span>;</span><br><span class="line"></span><br><span class="line">ll fac[N];</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">modpow</span><span class="params">(ll a, ll b, ll MOD)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b &amp; <span class="number">1</span>) ret = (ret * a)%MOD;</span><br><span class="line">        a = (a * a)%MOD;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">modmul</span><span class="params">(ll a, ll b, ll MOD)</span>  <span class="comment">//快速乘</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b &amp; <span class="number">1</span>) ret = (ret + a) % MOD;</span><br><span class="line">        a = (a + a) % MOD;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">getFactor</span><span class="params">(ll p)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= p; i++)</span><br><span class="line">        fac[i] = (fac[i<span class="number">-1</span>]*i) % p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">Lucas</span><span class="params">(ll n, ll m, ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ret=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n &amp;&amp; m)</span><br><span class="line">    &#123;</span><br><span class="line">        ll a = n%p, b = m%p;</span><br><span class="line">        <span class="keyword">if</span>(a &lt; b) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        ret = (ret * fac[a] * modpow(fac[b]*fac[a-b]%p, p<span class="number">-2</span>, p)) % p;</span><br><span class="line">        n/=p;</span><br><span class="line">        m/=p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">exgcd</span> <span class="params">(ll a, ll b, ll &amp;x, ll &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b)</span><br><span class="line">    &#123;</span><br><span class="line">        x = <span class="number">1</span>, y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans = exgcd ( b, a % b, y, x );</span><br><span class="line">    y -= a / b * x;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//中国剩余定理，a[i]存放余数，m[i]存放两两互质的数</span></span><br><span class="line"><span class="function">ll <span class="title">remainder</span><span class="params">(ll a[], ll m[], <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll d, x, y, ret = <span class="number">0</span>;</span><br><span class="line">    ll M = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) M *= m[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll w = M / m[i];</span><br><span class="line">        d = exgcd(m[i], w, x, y);</span><br><span class="line">        ret = (ret + modmul(modmul(y, w, M), a[i], M) ) % M; <span class="comment">//这里 y*w*a[i]直接乘会超long long，所以要用快速乘，M为每次的MOD。</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (ret + M) % M;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll n, m;</span><br><span class="line"><span class="keyword">int</span> K;</span><br><span class="line">ll p[<span class="number">15</span>], lucas[<span class="number">15</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld%lld%d"</span>, &amp;n, &amp;m, &amp;K);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; K; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;p[i]);</span><br><span class="line">            getFactor(p[i]);</span><br><span class="line">            lucas[i] = Lucas(n, m, p[i]); <span class="comment">//对于每一个pi计算一次C(n,m)</span></span><br><span class="line">        &#125;</span><br><span class="line">        ll ans = remainder(lucas, p, K);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;Unknown-Treasure&quot;&gt;&lt;a href=&quot;#Unknown-Treasure&quot; class=&quot;headerlink&quot; title=&quot;Unknown Tr
      
    
    </summary>
    
      <category term="算法" scheme="http://github.com/xxq1999/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Lucas" scheme="http://github.com/xxq1999/tags/Lucas/"/>
    
      <category term="中国剩余定理" scheme="http://github.com/xxq1999/tags/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Ponds （并查集||拓扑+深搜）</title>
    <link href="http://github.com/xxq1999/2018/08/07/Ponds-%EF%BC%88%E5%B9%B6%E6%9F%A5%E9%9B%86%E6%8B%93%E6%89%91+%E6%B7%B1%E6%90%9C%EF%BC%89/"/>
    <id>http://github.com/xxq1999/2018/08/07/Ponds-（并查集拓扑+深搜）/</id>
    <published>2018-08-07T15:34:28.417Z</published>
    <updated>2018-08-07T15:34:28.418Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Ponds"><a href="#Ponds" class="headerlink" title="Ponds"></a><a href="https://nanti.jisuanke.com/t/29329" target="_blank" rel="noopener">Ponds</a></h1><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给你n个点，m条无向边，每个点有vi的价值，你必须尽可能删去点，要求是删去的点的度数必须小于2。问你最后每个连通图中剩余奇数个点的总价值？</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>1、一开始想是并查集吧，因为要计算每个环的点的数量，先把所有能删的点删去之后，再把剩下的边union起来，计算每个父亲所拥有的子的个数，奇数就加上去……</p><p>2、拓扑+深搜。应该还是把能删掉的点先删掉，然后深搜也是找环的点数。</p><h2 id="看！代码"><a href="#看！代码" class="headerlink" title="看！代码"></a>看！代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">并查集做法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;next;</span><br><span class="line">    <span class="keyword">int</span> deg;</span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    node()</span><br><span class="line">    &#123;</span><br><span class="line">        deg=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> id[N];</span><br><span class="line"><span class="keyword">int</span> sz[N];</span><br><span class="line"></span><br><span class="line">ll poor[N];</span><br><span class="line"><span class="keyword">int</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> cnt[N];</span><br><span class="line"><span class="keyword">int</span> edge[N][<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> x)</span>  <span class="comment">///找跟根结点</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x!=id[x])</span><br><span class="line">    &#123;</span><br><span class="line">        id[x]=id[id[x]];</span><br><span class="line">        x=id[x];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">un</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> pr=Find(p);</span><br><span class="line">    <span class="keyword">int</span> qr=Find(q);</span><br><span class="line">    <span class="keyword">if</span>(pr==qr) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(sz[pr]&lt;=sz[qr])</span><br><span class="line">    &#123;</span><br><span class="line">        sz[qr]+=sz[pr];id[pr]=qr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        sz[pr]+=sz[qr];id[qr]=pr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        id[i]=i;sz[i]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">int</span> p,m,u,v;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        node x[N];</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span>(cnt));</span><br><span class="line">        clear();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;p,&amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=p;i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;poor[i]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=p;i++)</span><br><span class="line">            x[i].id=i;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</span><br><span class="line">            x[u].next.push_back(v);</span><br><span class="line">            x[u].deg++;</span><br><span class="line">            x[v].next.push_back(u);</span><br><span class="line">            x[v].deg++;</span><br><span class="line">            edge[i][<span class="number">0</span>]=u;</span><br><span class="line">            edge[i][<span class="number">1</span>]=v;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">queue</span>&lt;node&gt;q;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=p;i++)</span><br><span class="line">            <span class="keyword">if</span>(x[i].deg==<span class="number">1</span>)</span><br><span class="line">                q.push(x[i]);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(x[i].deg==<span class="number">0</span>)</span><br><span class="line">                vis[i]=<span class="number">1</span>;</span><br><span class="line">        node temp;</span><br><span class="line">        <span class="keyword">while</span>(!q.empty())</span><br><span class="line">        &#123;</span><br><span class="line">            temp=q.front();</span><br><span class="line">            q.pop();</span><br><span class="line">            vis[temp.id]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;temp.next.size();i++)</span><br><span class="line">                <span class="keyword">if</span>(!vis[temp.next[i]])</span><br><span class="line">            &#123;</span><br><span class="line">                x[temp.next[i]].deg--;</span><br><span class="line">                <span class="keyword">if</span>(x[temp.next[i]].deg==<span class="number">1</span>)</span><br><span class="line">                    q.push(x[temp.next[i]]);</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(x[temp.next[i]].deg==<span class="number">0</span>)</span><br><span class="line">                    vis[x[temp.next[i]].id]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x=edge[i][<span class="number">0</span>],y=edge[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(vis[x]==<span class="number">1</span>||vis[y]==<span class="number">1</span>)<span class="keyword">continue</span>;</span><br><span class="line">            un(x,y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=p;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(vis[i]==<span class="number">0</span>)</span><br><span class="line">                cnt[Find(i)]++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=p;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(vis[i]==<span class="number">0</span>&amp;&amp;cnt[Find(i)]&gt;=<span class="number">3</span>&amp;&amp;cnt[Find(i)]%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">                ans+=poor[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;Ponds&quot;&gt;&lt;a href=&quot;#Ponds&quot; class=&quot;headerlink&quot; title=&quot;Ponds&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://nant
      
    
    </summary>
    
      <category term="算法" scheme="http://github.com/xxq1999/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="拓扑" scheme="http://github.com/xxq1999/tags/%E6%8B%93%E6%89%91/"/>
    
      <category term="并查集" scheme="http://github.com/xxq1999/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>Glad You Came（线段树||ST表）</title>
    <link href="http://github.com/xxq1999/2018/08/06/Glad-You-Came%EF%BC%88%E7%BA%BF%E6%AE%B5%E6%A0%91%EF%BC%89/"/>
    <id>http://github.com/xxq1999/2018/08/06/Glad-You-Came（线段树）/</id>
    <published>2018-08-06T13:42:40.411Z</published>
    <updated>2018-08-09T12:18:20.941Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Glad-You-Came"><a href="#Glad-You-Came" class="headerlink" title="Glad You Came"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6356" target="_blank" rel="noopener">Glad You Came</a></h1><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>不晓得咋说……反正就是把m个区间对应m个vi，对于每一个区间的数字，小于vi的都变成vi，最后求最终结果的i*a[i]的异或。</p><p>1、线段树：肯定要维护一个最小值，而且这题由于初始的ai都是0，因此min也是0，而且暴力单点更新，我们只需要建一个一维的数组就好了。然后一个update函数，一个最终结果的计算函数，注意剪枝：” $if(tree[index].val&gt;=v) return “$。</p><p>2、反向ST表：我的理解是，对于一个区间$dp[i][d]$，表示的是从i位置开始长度为$2^d$的区间,也就是$[i , i+2^d-1]$。</p><p>比如对于区间[1,10]，长度为10，那么我们找到最大的那个&lt;10的$2^d$，即8，d=3，可将区间分成两个：[1,8],[3,10]，用dp[],[]表示就是$dp[1][3]$和$dp[10-2^3+1][3]$。这样对于每一次询问L,R，从一个大区间分出来的两个小区间，维护他们的max值，取max(dp ,val ) 。这样，我们就从最大的区间开始往小了维护，直到$dp[i][0]$这样。</p><h2>看！代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*线段树莽过的做法*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> uint;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tree[MAXN&lt;&lt;<span class="number">2</span>];<span class="comment">//一定要开到4倍多的空间</span></span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans;</span><br><span class="line"></span><br><span class="line">uint mod=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line"><span class="function">uint <span class="title">fx</span><span class="params">(uint &amp;x,uint &amp;y,uint &amp;z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    x=x^(x&lt;&lt;<span class="number">11</span>);</span><br><span class="line">    x=x^(x&gt;&gt;<span class="number">4</span>);</span><br><span class="line">    x=x^(x&lt;&lt;<span class="number">5</span>);</span><br><span class="line">    x=x^(x&gt;&gt;<span class="number">14</span>);</span><br><span class="line">    uint w=x^(y^z);</span><br><span class="line">    x=y;</span><br><span class="line">    y=z;</span><br><span class="line">    z=w;</span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> L,R;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> v;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tree[index]&gt;=v)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(l==r&amp;&amp;tree[index]&lt;v)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[index]=v;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(L&lt;=mid)update(l,mid,index&lt;&lt;<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(R&gt;mid)update(mid+<span class="number">1</span>,r,index&lt;&lt;<span class="number">1</span>|<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    tree[index]=min(tree[index&lt;&lt;<span class="number">1</span>],tree[index&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r)</span><br><span class="line">        <span class="keyword">return</span> tree[index];</span><br><span class="line">    <span class="keyword">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(cnt&lt;=mid)</span><br><span class="line">        <span class="keyword">return</span> cal(l,mid,index&lt;&lt;<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> cal(mid+<span class="number">1</span>,r,index&lt;&lt;<span class="number">1</span>|<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(tree,<span class="number">0</span>,<span class="keyword">sizeof</span>(tree));</span><br><span class="line">        <span class="keyword">int</span> n,m;</span><br><span class="line">        cnt=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">        uint x,y,z;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%u%u%u"</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            L=fx(x,y,z)%n+<span class="number">1</span>;</span><br><span class="line">            R=fx(x,y,z)%n+<span class="number">1</span>;</span><br><span class="line">            v=fx(x,y,z)%mod;</span><br><span class="line">            <span class="keyword">if</span>(L&gt;R) swap(L,R);</span><br><span class="line">            update(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(cnt=<span class="number">1</span>;cnt&lt;=n;cnt++)</span><br><span class="line">            ans=ans^(cnt*cal(<span class="number">1</span>,n,<span class="number">1</span>));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> uint;</span><br><span class="line">uint f[<span class="number">15000010</span>];</span><br><span class="line">uint mod=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line"><span class="function">uint <span class="title">fx</span><span class="params">(uint &amp;x,uint &amp;y,uint &amp;z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    x=x^(x&lt;&lt;<span class="number">11</span>);</span><br><span class="line">    x=x^(x&gt;&gt;<span class="number">4</span>);</span><br><span class="line">    x=x^(x&lt;&lt;<span class="number">5</span>);</span><br><span class="line">    x=x^(x&gt;&gt;<span class="number">14</span>);</span><br><span class="line">    uint w=x^(y^z);</span><br><span class="line">    x=y;</span><br><span class="line">    y=z;</span><br><span class="line">    z=w;</span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> l[<span class="number">5000010</span>],r[<span class="number">5000010</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> v[<span class="number">5000010</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> dp[<span class="number">100010</span>][<span class="number">18</span>];</span><br><span class="line"><span class="keyword">int</span> lg[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100000</span>;i++) lg[i]=log2(i);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n,m;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">        uint x,y,z;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%u%u%u"</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">3</span>*m;i++)</span><br><span class="line">            f[i]=fx(x,y,z);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            l[i]=min(f[i*<span class="number">3</span><span class="number">-2</span>]%n+<span class="number">1</span>,f[i*<span class="number">3</span><span class="number">-1</span>]%n+<span class="number">1</span>);</span><br><span class="line">            r[i]=max(f[i*<span class="number">3</span><span class="number">-2</span>]%n+<span class="number">1</span>,f[i*<span class="number">3</span><span class="number">-1</span>]%n+<span class="number">1</span>);</span><br><span class="line">            v[i]=f[i*<span class="number">3</span>]%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">int</span> d,MAX=<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            d=lg[r[i]-l[i]+<span class="number">1</span>];</span><br><span class="line">            MAX=max(MAX,d);<span class="comment">//记录最长的长度</span></span><br><span class="line">            dp[l[i]][d]=max(v[i],dp[l[i]][d]); <span class="comment">//分为两部分，每一部分取覆盖的最小值和v比较</span></span><br><span class="line">            dp[r[i]-(<span class="number">1</span>&lt;&lt;d)+<span class="number">1</span>][d]=max(v[i],dp[r[i]-(<span class="number">1</span>&lt;&lt;d)+<span class="number">1</span>][d]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=MAX;j&gt;<span class="number">0</span>;j--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i+(<span class="number">1</span>&lt;&lt;j)<span class="number">-1</span>&lt;=n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                dp[i][j<span class="number">-1</span>]=max(dp[i][j],dp[i][j<span class="number">-1</span>]);</span><br><span class="line">                dp[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>]=max(dp[i][j],dp[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            ans=ans^(<span class="number">1l</span>l*i*dp[i][<span class="number">0</span>]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;Glad-You-Came&quot;&gt;&lt;a href=&quot;#Glad-You-Came&quot; class=&quot;headerlink&quot; title=&quot;Glad You Came&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="算法" scheme="http://github.com/xxq1999/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="线段树" scheme="http://github.com/xxq1999/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
      <category term="ST表" scheme="http://github.com/xxq1999/tags/ST%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Fruit Ninja(头一次接触的随机化算法)</title>
    <link href="http://github.com/xxq1999/2018/08/05/Fruit-Ninja(%E5%A4%B4%E4%B8%80%E6%AC%A1%E6%8E%A5%E8%A7%A6%E7%9A%84%E9%9A%8F%E6%9C%BA%E5%8C%96%E7%AE%97%E6%B3%95)/"/>
    <id>http://github.com/xxq1999/2018/08/05/Fruit-Ninja(头一次接触的随机化算法)/</id>
    <published>2018-08-05T13:11:58.444Z</published>
    <updated>2018-08-05T13:23:38.880Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1><a href="https://www.nowcoder.com/acm/contest/163/A" target="_blank" rel="noopener">Fruit Ninja</a></h1><h2>题意</h2><p>屏幕上有n个水果，你可以画一条直线切掉其中一些，给你N和x，M/N&gt;=x，M为切掉的水果数，x为0~1的纯小数，指的是切掉的水果比吧。问你是否有满足这个式子的这样一条直线，有输出yes，没有输出no。</p><p>N&lt;=1e4 , x小数点后一位（0,1）。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>随机化，巧妙巧妙，厉害厉害，佩服佩服，不过要分析一波随机的数量。由于m是切掉的水果数，n是总水果数，x是两者之比，也就是说在这条直线上的水果数是m个，意味着随机选一个水果，刚好在直线上的概率是x，因此随机选两个刚好组成这条直线的概率是x^2，而x∈[0.1,0.9]，因此概率最小为0.01，也就是说取100次就能取到那条我们需要的直线，反之如果没有满足的，就说明“NO”。为了保险起见，我们将随机范围设置为200。</p><h2 id="看！代码"><a href="#看！代码" class="headerlink" title="看！代码"></a>看！代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    ll x,y;</span><br><span class="line">&#125;;</span><br><span class="line">node point[<span class="number">10010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        <span class="keyword">double</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%lf"</span>,&amp;n,&amp;x);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;point[i].x,&amp;point[i].y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">200</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> a=rand()%n;</span><br><span class="line">            <span class="keyword">int</span> b=rand()%n;</span><br><span class="line">            <span class="keyword">while</span>(a==b)</span><br><span class="line">                a=rand()%n;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">                <span class="keyword">if</span>((point[a].x-point[b].x)*(point[a].y-point[j].y)==(point[a].y-point[b].y)*(point[a].x-point[j].x))</span><br><span class="line">                    cnt++;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(cnt&gt;=n*x)</span><br><span class="line">            &#123;</span><br><span class="line">                flag=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)    <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1&gt;&lt;a href=&quot;https://www.nowcoder.com/acm/contest/163/A&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Fr
      
    
    </summary>
    
      <category term="算法" scheme="http://github.com/xxq1999/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="随机化算法" scheme="http://github.com/xxq1999/tags/%E9%9A%8F%E6%9C%BA%E5%8C%96%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>HDU1085 Holding Bin-Laden Captive!(母函数)</title>
    <link href="http://github.com/xxq1999/2018/08/03/HDU1085-Holding-Bin-Laden-Captive!(%E6%AF%8D%E5%87%BD%E6%95%B0)/"/>
    <id>http://github.com/xxq1999/2018/08/03/HDU1085-Holding-Bin-Laden-Captive!(母函数)/</id>
    <published>2018-08-02T17:22:04.486Z</published>
    <updated>2018-08-02T17:22:04.489Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Holding-Bin-Laden-Captive"><a href="#Holding-Bin-Laden-Captive" class="headerlink" title="Holding Bin-Laden Captive!"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1085" target="_blank" rel="noopener">Holding Bin-Laden Captive!</a></h1><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>有面值为1、2、5的三种硬币，给你三个数字分别表示拥有的硬币数量，问最小的不能组成的面值为多少?</p><p>1&lt;=n&lt;=1000</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>just母函数，x上的指数代表v[i]*num，比如面值为2的硬币有3枚，那么就可以组成这样的多项式：</p><p>$$<br>1+x^2+x^4+x^6<br>$$<br>然后套模板就行。</p><h2 id="看！代码"><a href="#看！代码" class="headerlink" title="看！代码"></a>看！代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a1,a2,a3;</span><br><span class="line">    <span class="keyword">int</span> v[<span class="number">3</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> n[<span class="number">3</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> n2[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n2[<span class="number">0</span>],&amp;n2[<span class="number">1</span>],&amp;n2[<span class="number">2</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n2[<span class="number">0</span>]==<span class="number">0</span>&amp;&amp;n2[<span class="number">1</span>]==<span class="number">0</span>&amp;&amp;n2[<span class="number">2</span>]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">int</span> a[<span class="number">10000</span>]=&#123;<span class="number">0</span>&#125;,b[<span class="number">10000</span>];</span><br><span class="line">        a[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> last=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> P=n2[<span class="number">0</span>]+n2[<span class="number">1</span>]*<span class="number">2</span>+n2[<span class="number">2</span>]*<span class="number">5</span>;</span><br><span class="line">        <span class="keyword">int</span> K=<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;K;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> last2=min(last+n2[i]*v[i],P);<span class="comment">//计算下一次的last</span></span><br><span class="line">            <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*(last2+<span class="number">1</span>));<span class="comment">//只清空b[0..last2]</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=n[i];j&lt;=n2[i]&amp;&amp;j*v[i]&lt;=last2;j++)<span class="comment">//这里是last2</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=last&amp;&amp;k+j*v[i]&lt;=last2;k++)<span class="comment">//这里一个是last，一个是last2</span></span><br><span class="line">                    b[k+j*v[i]]+=a[k];</span><br><span class="line">            <span class="built_in">memcpy</span>(a,b,<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*(last2+<span class="number">1</span>));<span class="comment">//b赋值给a，只赋值0..last2</span></span><br><span class="line">            last=last2;<span class="comment">//更新last</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=P;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!flag) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,P+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;Holding-Bin-Laden-Captive&quot;&gt;&lt;a href=&quot;#Holding-Bin-Laden-Captive&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
      <category term="算法" scheme="http://github.com/xxq1999/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="母函数" scheme="http://github.com/xxq1999/tags/%E6%AF%8D%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>伯努利求自然数幂和</title>
    <link href="http://github.com/xxq1999/2018/08/03/%E4%BC%AF%E5%8A%AA%E5%88%A9%E6%B1%82%E8%87%AA%E7%84%B6%E6%95%B0%E5%B9%82%E5%92%8C/"/>
    <id>http://github.com/xxq1999/2018/08/03/伯努利求自然数幂和/</id>
    <published>2018-08-02T16:12:08.419Z</published>
    <updated>2018-08-02T16:12:08.420Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><a href="https://blog.csdn.net/acdreamers/article/details/38929067" target="_blank" rel="noopener">https://blog.csdn.net/acdreamers/article/details/38929067</a> </p><p>下面两个代码都是可以作为模板n&lt;=1e18</p><p><a href="https://blog.csdn.net/acdreamers/article/details/38929067" target="_blank" rel="noopener">https://blog.csdn.net/acdreamers/article/details/38929067</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> LL MOD = <span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2005</span>;</span><br><span class="line"> </span><br><span class="line">LL C[N][N];</span><br><span class="line">LL B[N],Inv[N];</span><br><span class="line">LL Tmp[N];</span><br><span class="line">LL n;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//预处理组合数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        C[i][<span class="number">0</span>] = C[i][i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;i; j++)</span><br><span class="line">            C[i][j] = (C[i<span class="number">-1</span>][j] % MOD + C[i<span class="number">-1</span>][j<span class="number">-1</span>] % MOD) % MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//预处理逆元</span></span><br><span class="line">    Inv[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;N; i++)</span><br><span class="line">        Inv[i] = (MOD - MOD / i) * Inv[MOD % i] % MOD;</span><br><span class="line">    <span class="comment">//预处理伯努利数</span></span><br><span class="line">    B[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        LL ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(i == N - <span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans += C[i+<span class="number">1</span>][j] * B[j];</span><br><span class="line">            ans %= MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        ans *= -Inv[i+<span class="number">1</span>];</span><br><span class="line">        ans = (ans % MOD + MOD) % MOD;</span><br><span class="line">        B[i] = ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">LL <span class="title">Work</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL ans = Inv[k+<span class="number">1</span>];</span><br><span class="line">    LL sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=k+<span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum += C[k+<span class="number">1</span>][i] * Tmp[i] % MOD * B[k+<span class="number">1</span>-i] % MOD;</span><br><span class="line">        sum %= MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    ans *= sum;</span><br><span class="line">    ans %= MOD;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    Init();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> k;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%I64d %d"</span>, &amp;n, &amp;k);</span><br><span class="line">        n %= MOD;</span><br><span class="line">        Tmp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;N; i++)</span><br><span class="line">            Tmp[i] = Tmp[i<span class="number">-1</span>] * (n + <span class="number">1</span>) % MOD;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>, Work(k));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">const</span> LL INF = <span class="number">1e9</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">2e3</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> LL MOD = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">LL c[MAXN][MAXN], Inv[MAXN], B[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Exgcd</span><span class="params">(LL a, LL b, LL &amp;x, LL &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        x = <span class="number">1</span>;</span><br><span class="line">        y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    LL x1, y1;</span><br><span class="line">    Exgcd(b, a%b, x1, y1);</span><br><span class="line">    x = y1;</span><br><span class="line">    y = x1 - (a/b)*y1;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">//预处理组合数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Get_Fac</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;MAXN; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        c[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        c[i][i] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;MAXN; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=i; j++)</span><br><span class="line">            c[i][j] = (c[i<span class="number">-1</span>][j]+c[i<span class="number">-1</span>][j<span class="number">-1</span>])%MOD;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">//预处理逆元</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Get_Inv</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;MAXN; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        LL x, y;</span><br><span class="line">        Exgcd(i, MOD, x, y);</span><br><span class="line">        x = (x%MOD+MOD)%MOD;</span><br><span class="line">        Inv[i] = x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">quick_MOD</span><span class="params">(LL a, LL b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b &amp; <span class="number">1</span>)</span><br><span class="line">            ans = (ans*a)%MOD;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        a = (a*a)%MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Get_Bonuli</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    B[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;MAXN<span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        LL tmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;i; j++)</span><br><span class="line">            tmp = (tmp+c[i+<span class="number">1</span>][j]*B[j])%MOD;</span><br><span class="line">        B[i] = tmp;</span><br><span class="line">        B[i] = B[i]*(-Inv[i+<span class="number">1</span>]);</span><br><span class="line">        B[i] = (B[i]%MOD+MOD)%MOD;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Get_Fac();</span><br><span class="line">    Get_Inv();</span><br><span class="line">    Get_Bonuli();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Init();</span><br><span class="line">    <span class="keyword">int</span> T, k;</span><br><span class="line">    LL n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld%d"</span>,&amp;n,&amp;k);</span><br><span class="line">        n++;</span><br><span class="line">        n %= MOD;</span><br><span class="line">        LL ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=k+<span class="number">1</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans = (ans+((c[k+<span class="number">1</span>][i]*B[k+<span class="number">1</span>-i])%MOD)*quick_MOD(n,(LL)i))%MOD;</span><br><span class="line">            ans = (ans%MOD+MOD)%MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        ans = ans*Inv[k+<span class="number">1</span>];</span><br><span class="line">        ans = (ans%MOD+MOD)%MOD;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/acdreamers/article/details/38929067&quot; target=&quot;_blank&quot; rel
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>乘法逆元模板</title>
    <link href="http://github.com/xxq1999/2018/08/03/%E4%B9%98%E6%B3%95%E9%80%86%E5%85%83%E6%A8%A1%E6%9D%BF/"/>
    <id>http://github.com/xxq1999/2018/08/03/乘法逆元模板/</id>
    <published>2018-08-02T16:11:56.501Z</published>
    <updated>2018-08-02T16:11:56.506Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ol><li>扩展欧几里得</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">ex_gcd</span><span class="params">(ll a,ll b,ll &amp;x,ll &amp;y)</span><span class="comment">//扩展欧几里得（扩展gcd）</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a==<span class="number">0</span>&amp;&amp;b==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span> (b==<span class="number">0</span>)&#123;x=<span class="number">1</span>;y=<span class="number">0</span>;<span class="keyword">return</span> a;&#125;</span><br><span class="line">ll d=ex_gcd(b,a%b,y,x);</span><br><span class="line">y-=a/b*x;</span><br><span class="line"><span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">mod_inverse</span><span class="params">(ll a,ll n)</span><span class="comment">//乘法逆元，a与n必须互素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll x,y;</span><br><span class="line">ll d = ex_gcd(a,n,x,y);</span><br><span class="line"><span class="keyword">return</span> (x%n+n)%n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>费马小定理，快速幂</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span>  <span class="comment">//x与mod互素，且mod为素数</span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> k=mod<span class="number">-2</span>,ans=<span class="number">1</span>;  </span><br><span class="line">    <span class="keyword">while</span>(k)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span> (k&amp;<span class="number">1</span>) ans=(ll)ans*x%mod;  </span><br><span class="line">        x=(ll)x*x%mod;  </span><br><span class="line">        k&gt;&gt;=<span class="number">1</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> ans;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">//x在%mod下的逆元</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*已知p是质数且gcd(a, p) = 1，则 ap-1 ≡ 1 (mod p),  所以 a*ap-2 ≡ 1 (mod p)。</span></span><br><span class="line"><span class="comment">a^(p-2)就是a的逆元了*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;ol&gt;
&lt;li&gt;扩展欧几里得&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
      <category term="算法" scheme="http://github.com/xxq1999/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="模板" scheme="http://github.com/xxq1999/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
</feed>
